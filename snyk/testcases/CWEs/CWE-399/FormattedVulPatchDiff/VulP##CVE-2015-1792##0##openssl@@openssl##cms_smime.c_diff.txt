--- /home/V1SCAN/CWE-399/FormattedVul/OLD##CVE-2015-1792##0##openssl@@openssl##cms_smime.c	2023-12-12 05:12:51.560132533 +0900
+++ /home/V1SCAN/CWE-399/FormattedPatch/NEW##CVE-2015-1792##0##openssl@@openssl##cms_smime.c	2023-12-12 05:12:51.610142787 +0900
@@ -60,18 +60,24 @@
 #include <openssl/x509.h>
 #include <openssl/x509v3.h>
 
+static BIO *cms_get_text_bio(BIO *out, unsigned int flags) {
+  BIO *rbio;
+  if (out == NULL)
+    rbio = BIO_new(BIO_s_null());
+  else if (flags & CMS_TEXT) {
+    rbio = BIO_new(BIO_s_mem());
+    BIO_set_mem_eof_return(rbio, 0);
+  } else
+    rbio = out;
+  return rbio;
+}
+
 static int cms_copy_content(BIO *out, BIO *in, unsigned int flags) {
   unsigned char buf[4096];
   int r = 0, i;
-  BIO *tmpout = NULL;
+  BIO *tmpout;
 
-  if (out == NULL)
-    tmpout = BIO_new(BIO_s_null());
-  else if (flags & CMS_TEXT) {
-    tmpout = BIO_new(BIO_s_mem());
-    BIO_set_mem_eof_return(tmpout, 0);
-  } else
-    tmpout = out;
+  tmpout = cms_get_text_bio(out, flags);
 
   if (!tmpout) {
     CMSerr(CMS_F_CMS_COPY_CONTENT, ERR_R_MALLOC_FAILURE);
@@ -126,7 +132,7 @@
       tbio = BIO_pop(f);
       BIO_free(f);
       f = tbio;
-    } while (f != upto);
+    } while (f && f != upto);
   } else
     BIO_free_all(f);
 }
@@ -285,7 +291,7 @@
   STACK_OF(X509_CRL) *crls = NULL;
   X509 *signer;
   int i, scount = 0, ret = 0;
-  BIO *cmsbio = NULL, *tmpin = NULL;
+  BIO *cmsbio = NULL, *tmpin = NULL, *tmpout = NULL;
 
   if (!dcont && !check_content(cms))
     return 0;
@@ -357,14 +363,41 @@
     }
   } else
     tmpin = dcont;
+  /* If not binary mode and detached generate digests by *writing*
+   * through the BIO. That makes it possible to canonicalise the
+   * input.
+   */
+  if (!(flags & SMIME_BINARY) && dcont) {
+    /* Create output BIO so we can either handle text or to
+     * ensure included content doesn't override detached content.
+     */
+    tmpout = cms_get_text_bio(out, flags);
+    if (!tmpout) {
+      CMSerr(CMS_F_CMS_VERIFY, ERR_R_MALLOC_FAILURE);
+      goto err;
+    }
+    cmsbio = CMS_dataInit(cms, tmpout);
+    if (!cmsbio)
+      goto err;
+    /* Don't use SMIME_TEXT for verify: it adds headers and
+     * we want to remove them.
+     */
+    SMIME_crlf_copy(dcont, cmsbio, flags & ~SMIME_TEXT);
+
+    if (flags & CMS_TEXT) {
+      if (!SMIME_text(tmpout, out)) {
+        CMSerr(CMS_F_CMS_VERIFY, CMS_R_SMIME_TEXT_ERROR);
+        goto err;
+      }
+    }
+  } else {
+    cmsbio = CMS_dataInit(cms, tmpin);
+    if (!cmsbio)
+      goto err;
 
-  cmsbio = CMS_dataInit(cms, tmpin);
-  if (!cmsbio)
-    goto err;
-
-  if (!cms_copy_content(out, cmsbio, flags))
-    goto err;
-
+    if (!cms_copy_content(out, cmsbio, flags))
+      goto err;
+  }
   if (!(flags & CMS_NO_CONTENT_VERIFY)) {
     for (i = 0; i < sk_CMS_SignerInfo_num(sinfos); i++) {
       si = sk_CMS_SignerInfo_value(sinfos, i);
@@ -378,11 +411,20 @@
   ret = 1;
 
 err:
+  if (!(flags & SMIME_BINARY) && dcont) {
+    do_free_upto(cmsbio, tmpout);
+    if (tmpin != dcont)
+      BIO_free(tmpin);
+  } else {
+
+    if (dcont && (tmpin == dcont))
+      do_free_upto(cmsbio, dcont);
+    else
+      BIO_free_all(cmsbio);
+  }
 
-  if (dcont && (tmpin == dcont))
-    do_free_upto(cmsbio, dcont);
-  else
-    BIO_free_all(cmsbio);
+  if (tmpout && out != tmpout)
+    BIO_free_all(tmpout);
 
   if (cms_certs)
     sk_X509_pop_free(cms_certs, X509_free);
