--- /home/V1SCAN/CWE-787/FormattedVul/OLD##CVE-2022-33099##0##lua@@lua##lvm.c	2023-12-06 04:37:18.320322687 +0900
+++ /home/V1SCAN/CWE-787/FormattedPatch/NEW##CVE-2022-33099##0##lua@@lua##lvm.c	2023-12-06 04:37:20.040318477 +0900
@@ -636,8 +636,10 @@
       /* collect total length and number of strings */
       for (n = 1; n < total && tostring(L, s2v(top - n - 1)); n++) {
         size_t l = vslen(s2v(top - n - 1));
-        if (l_unlikely(l >= (MAX_SIZE / sizeof(char)) - tl))
+        if (l_unlikely(l >= (MAX_SIZE / sizeof(char)) - tl)) {
+          L->top = top - total; /* pop strings to avoid wasting stack */
           luaG_runerror(L, "string length overflow");
+        }
         tl += l;
       }
       if (tl <= LUAI_MAXSHORTLEN) { /* is result a short string? */
@@ -650,9 +652,9 @@
       }
       setsvalue2s(L, top - n, ts); /* create result */
     }
-    total -= n - 1;    /* got 'n' strings to create 1 new */
-    L->top -= n - 1;   /* popped 'n' strings and pushed one */
-  } while (total > 1); /* repeat until only 1 result left */
+    total -= n - 1;         /* got 'n' strings to create 1 new */
+    L->top = top - (n - 1); /* popped 'n' strings and pushed one */
+  } while (total > 1);      /* repeat until only 1 result left */
 }
 
 /*
