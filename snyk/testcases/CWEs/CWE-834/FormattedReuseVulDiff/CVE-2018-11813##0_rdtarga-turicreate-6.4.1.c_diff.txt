--- /home/V1SCAN/CWE-834/FormattedUsed/rdtarga-turicreate-6.4.1.c	2023-12-12 04:28:50.971937494 +0900
+++ /home/V1SCAN/CWE-834/FormattedVul/OLD##CVE-2018-11813##0##libjpeg-turbo@@libjpeg-turbo##rdtarga.c	2023-12-12 04:28:50.991938058 +0900
@@ -1,9 +1,12 @@
 /*
  * rdtarga.c
  *
+ * This file was part of the Independent JPEG Group's software:
  * Copyright (C) 1991-1996, Thomas G. Lane.
- * This file is part of the Independent JPEG Group's software.
- * For conditions of distribution and use, see the accompanying README file.
+ * It was modified by The libjpeg-turbo Project to include only code relevant
+ * to libjpeg-turbo.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
  *
  * This file contains routines to read input images in Targa format.
  *
@@ -27,7 +30,7 @@
 typedef unsigned char U_CHAR;
 #define UCH(x) ((int)(x))
 #else /* !HAVE_UNSIGNED_CHAR */
-#ifdef CHAR_IS_UNSIGNED
+#ifdef __CHAR_UNSIGNED__
 typedef char U_CHAR;
 #define UCH(x) ((int)(x))
 #else
@@ -53,7 +56,7 @@
   JDIMENSION current_row;       /* Current logical row number to read */
 
   /* Pointer to routine to extract next Targa pixel from input file */
-  JMETHOD(void, read_pixel, (tga_source_ptr sinfo));
+  void (*read_pixel)(tga_source_ptr sinfo);
 
   /* Result of read_pixel is delivered here: */
   U_CHAR tga_pixel[4];
@@ -65,8 +68,7 @@
   int dup_pixel_count; /* # of times to duplicate previous pixel */
 
   /* This saves the correct pixel-row-expansion method for preload_image */
-  JMETHOD(JDIMENSION, get_pixel_rows,
-          (j_compress_ptr cinfo, cjpeg_source_ptr sinfo));
+  JDIMENSION (*get_pixel_rows)(j_compress_ptr cinfo, cjpeg_source_ptr sinfo);
 } tga_source_struct;
 
 /* For expanding 5-bit pixel values to 8-bit with best rounding */
@@ -345,7 +347,8 @@
   if (cmaptype > 1 || /* cmaptype must be 0 or 1 */
       source->pixel_size < 1 || source->pixel_size > 4 ||
       (UCH(targaheader[16]) & 7) != 0 || /* bits/pixel must be multiple of 8 */
-      interlace_type != 0) /* currently don't allow interlaced image */
+      interlace_type != 0 ||     /* currently don't allow interlaced image */
+      width == 0 || height == 0) /* image width/height must be non-zero */
     ERREXIT(cinfo, JERR_TGA_BADPARMS);
 
   if (subtype > 8) {
@@ -463,7 +466,7 @@
 
   /* Create module interface object */
   source = (tga_source_ptr)(*cinfo->mem->alloc_small)(
-      (j_common_ptr)cinfo, JPOOL_IMAGE, SIZEOF(tga_source_struct));
+      (j_common_ptr)cinfo, JPOOL_IMAGE, sizeof(tga_source_struct));
   source->cinfo = cinfo; /* make back link for subroutines */
   /* Fill in method ptrs, except get_pixel_rows which start_input sets */
   source->pub.start_input = start_input_tga;
