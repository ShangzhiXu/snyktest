--- /home/V1SCAN/CWE-119/FormattedVul/OLD##CVE-2016-9586##0##curl@@curl##mprintf.c	2023-12-10 02:44:14.530186220 +0900
+++ /home/V1SCAN/CWE-119/FormattedPatch/NEW##CVE-2016-9586##0##curl@@curl##mprintf.c	2023-12-10 02:44:15.220182905 +0900
@@ -91,7 +91,9 @@
 #define mp_uintmax_t unsigned long
 #endif
 
-#define BUFFSIZE 256       /* buffer for long-to-str and float-to-str calcs */
+#define BUFFSIZE                                                               \
+  326 /* buffer for long-to-str and float-to-str calcs, should                 \
+         fit negative DBL_MAX (317 letters) */
 #define MAX_PARAMETERS 128 /* lame static limit */
 
 #ifdef __AMIGA__
@@ -922,12 +924,25 @@
       *fptr = 0;
 
       if (width >= 0) {
+        if (width >= (long)sizeof(work))
+          width = sizeof(work) - 1;
         /* RECURSIVE USAGE */
         len = curl_msnprintf(fptr, left, "%ld", width);
         fptr += len;
         left -= len;
       }
       if (prec >= 0) {
+        /* for each digit in the integer part, we can have one less
+           precision */
+        size_t maxprec = sizeof(work) - 2;
+        double val = p->data.dnum;
+        while (val >= 10.0) {
+          val /= 10;
+          maxprec--;
+        }
+
+        if (prec > (long)maxprec)
+          prec = maxprec - 1;
         /* RECURSIVE USAGE */
         len = curl_msnprintf(fptr, left, ".%ld", prec);
         fptr += len;
@@ -947,7 +962,9 @@
       /* NOTE NOTE NOTE!! Not all sprintf implementations return number of
          output characters */
       (sprintf)(work, formatbuf, p->data.dnum);
-
+#ifdef CURLDEBUG
+      assert(strlen(work) <= sizeof(work));
+#endif
       for (fptr = work; *fptr; fptr++)
         OUTCHAR(*fptr);
     } break;
