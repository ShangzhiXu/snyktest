--- /home/V1SCAN/CWE-125/FormattedUsed/SDL_bmp-filament-1.9.9.c	2023-12-10 02:51:50.408374620 +0900
+++ /home/V1SCAN/CWE-125/FormattedPatch/NEW##CVE-2019-13616##0##libsdl-org@@SDL##SDL_bmp.c	2023-12-10 02:51:52.328359576 +0900
@@ -1,6 +1,6 @@
 /*
   Simple DirectMedia Layer
-  Copyright (C) 1997-2018 Sam Lantinga <slouken@libsdl.org>
+  Copyright (C) 1997-2019 Sam Lantinga <slouken@libsdl.org>
 
   This software is provided 'as-is', without any express or implied
   warranty.  In no event will the authors be held liable for any damages
@@ -224,6 +224,11 @@
       SDL_RWseek(src, (biSize - headerSize), RW_SEEK_CUR);
     }
   }
+  if (biWidth <= 0 || biHeight == 0) {
+    SDL_SetError("BMP file with bad dimensions (%dx%d)", biWidth, biHeight);
+    was_error = SDL_TRUE;
+    goto done;
+  }
   if (biHeight < 0) {
     topDown = SDL_TRUE;
     biHeight = -biHeight;
@@ -244,6 +249,14 @@
     ExpandBMP = biBitCount;
     biBitCount = 8;
     break;
+  case 2:
+  case 3:
+  case 5:
+  case 6:
+  case 7:
+    SDL_SetError("%d-bpp BMP images are not supported", biBitCount);
+    was_error = SDL_TRUE;
+    goto done;
   default:
     ExpandBMP = 0;
     break;
@@ -310,6 +323,10 @@
     SDL_assert(biBitCount <= 8);
     if (biClrUsed == 0) {
       biClrUsed = 1 << biBitCount;
+    } else if (biClrUsed > (Uint32)(1 << biBitCount)) {
+      SDL_SetError("BMP file has an invalid number of colors");
+      was_error = SDL_TRUE;
+      goto done;
     }
     if ((int)biClrUsed > palette->ncolors) {
       SDL_Color *colors;
@@ -389,7 +406,13 @@
             goto done;
           }
         }
-        *(bits + i) = (pixel >> shift);
+        bits[i] = (pixel >> shift);
+        if (bits[i] >= biClrUsed) {
+          SDL_SetError(
+              "A BMP image contains a pixel with a color out of the palette");
+          was_error = SDL_TRUE;
+          goto done;
+        }
         pixel <<= ExpandBMP;
       }
     } break;
@@ -400,6 +423,16 @@
         was_error = SDL_TRUE;
         goto done;
       }
+      if (biBitCount == 8 && palette && biClrUsed < (Uint32)(1 << biBitCount)) {
+        for (i = 0; i < surface->w; ++i) {
+          if (bits[i] >= biClrUsed) {
+            SDL_SetError(
+                "A BMP image contains a pixel with a color out of the palette");
+            was_error = SDL_TRUE;
+            goto done;
+          }
+        }
+      }
 #if SDL_BYTEORDER == SDL_BIG_ENDIAN
       /* Byte-swap the pixels if needed. Note that the 24bpp
          case has already been taken care of above. */
